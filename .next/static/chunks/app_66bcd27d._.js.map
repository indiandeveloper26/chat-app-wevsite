{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/live-app/socail-app/socail-forntend/socail-appwith-web/socail-web-app/app/apicall.js"],"sourcesContent":["// component/api.js\r\n\r\nimport axios from 'axios';\r\n\r\n\r\n// ✅ Axios instance banao\r\nconst api = axios.create({\r\n    baseURL: 'http://10.17.254.92:5000', // yahan apna base URL daal\r\n    // baseURL: 'https://socail-app-bakcend-v-2-2.onrender.com/', // yahan apna base URL daal\r\n\r\n    // baseURL: 'https://firebase-chat-app-v-8-3.onrender.com', // yahan apna base URL daal\r\n    timeout: 5000,\r\n});\r\n\r\n// ✅ Request interceptor: Har request mein token lagana hai to\r\n// api.interceptors.request.use(\r\n//   async (config) => {\r\n//     const token = await AsyncStorage.getItem('token'); // ya 'tokenn' jo bhi rakha ho\r\n//     if (token) {\r\n//       config.headers.Authorization = `Bearer ${token}`;\r\n//     }\r\n//     return config;\r\n//   },\r\n//   (error) => Promise.reject(error)\r\n// );\r\n\r\n// ✅ Response interceptor: agar chaho to response mein kuch kar sakte ho\r\napi.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        // yahan 401 error handle, logout, refresh token wagaira kar sakte ho\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default api;\r\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;AAEnB;;AAGA,yBAAyB;AACzB,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACrB,SAAS;IACT,yFAAyF;IAEzF,uFAAuF;IACvF,SAAS;AACb;AAEA,8DAA8D;AAC9D,gCAAgC;AAChC,wBAAwB;AACxB,wFAAwF;AACxF,mBAAmB;AACnB,0DAA0D;AAC1D,QAAQ;AACR,qBAAqB;AACrB,OAAO;AACP,qCAAqC;AACrC,KAAK;AAEL,wEAAwE;AACxE,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CACzB,CAAC,WAAa,UACd,CAAC;IACG,qEAAqE;IACrE,OAAO,QAAQ,MAAM,CAAC;AAC1B;uCAGW","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///D:/live-app/socail-app/socail-forntend/socail-appwith-web/socail-web-app/app/userprofile/page.jsx"],"sourcesContent":["// \"use client\";\r\n// import { useEffect, useState } from \"react\";\r\n// import api from \"../apicall\";\r\n\r\n// export default function ProfilePage() {\r\n//     const [user, setUser] = useState(null);\r\n//     const [posts, setPosts] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         async function fetchProfile() {\r\n//             let userid = localStorage.getItem(\"id\"); // user id jo login pe save hua hai\r\n//             console.log(\"userid\", userid);\r\n\r\n//             try {\r\n//                 const res = await api.post(\"/useralldata\", { id: userid });\r\n\r\n//                 setUser(res.data.data);\r\n//                 setPosts(res.data.data.posts);\r\n\r\n//                 console.log(\"Profile Data:\", res.data.data);\r\n//             } catch (err) {\r\n//                 console.error(\"Error fetching profile:\", err);\r\n//             }\r\n//         }\r\n//         fetchProfile();\r\n//     }, []);\r\n\r\n//     if (!user) return <p>Loading...</p>;\r\n\r\n//     return (\r\n//         <div className=\"max-w-3xl mx-auto p-4\">\r\n//             {/* User Info */}\r\n//             <div className=\"flex items-center gap-4 border-b pb-4 mb-6\">\r\n//                 <img\r\n//                     src={user.avatar || \"/default-avatar.png\"}\r\n//                     alt={user.name}\r\n//                     className=\"w-20 h-20 rounded-full border\"\r\n//                 />\r\n//                 <div>\r\n//                     <h1 className=\"text-2xl font-bold\">{user.name}</h1>\r\n//                     <p className=\"text-gray-600\">{user.email}</p>\r\n//                     <p className=\"text-gray-500\">{posts.length} posts</p>\r\n//                 </div>\r\n//             </div>\r\n\r\n//             {/* Posts Grid (Instagram style) */}\r\n//             <div className=\"grid grid-cols-3 gap-2\">\r\n//                 {posts.map((post) => (\r\n//                     <div key={post._id} className=\"relative aspect-square bg-gray-100\">\r\n//                         {post.image ? (\r\n//                             <img\r\n//                                 src={`http://localhost:5000${post.image}`} // server ka address + image path\r\n//                                 alt=\"post\"\r\n//                                 className=\"object-cover w-full h-full\"\r\n//                             />\r\n\r\n//                         ) : (\r\n//                             <p className=\"text-sm p-2\">{post.content}</p>\r\n//                         )}\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport api from \"../apicall\";\r\n\r\nexport default function ProfilePage({ profileUserId }) {\r\n    const [user, setUser] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n    const [currentUserId, setCurrentUserId] = useState(null);\r\n    const [isFollowing, setIsFollowing] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const loggedInId = localStorage.getItem(\"id\");\r\n        setCurrentUserId(loggedInId);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!profileUserId && !currentUserId) return;\r\n\r\n        const fetchProfile = async () => {\r\n            try {\r\n                const idToFetch = profileUserId || currentUserId;\r\n                const res = await api.post(\"/useralldata\", { id: idToFetch });\r\n\r\n                setUser(res.data.data);\r\n                setPosts(res.data.data.posts);\r\n\r\n                setIsFollowing(\r\n                    res.data.data.followers?.includes(currentUserId)\r\n                );\r\n            } catch (err) {\r\n                console.error(\"Error fetching profile:\", err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchProfile();\r\n    }, [profileUserId, currentUserId]);\r\n\r\n    const handleFollowToggle = async () => {\r\n        if (!user || !currentUserId) return;\r\n        setButtonLoading(true);\r\n\r\n        try {\r\n            const action = isFollowing ? \"unfollow\" : \"follow\";\r\n            const res = await api.post(\"/follow\", {\r\n                userId: currentUserId,\r\n                targetUserId: user._id,\r\n                action,\r\n            });\r\n\r\n            setUser((prev) => ({\r\n                ...prev,\r\n                followers: res.data.followers,\r\n                following: res.data.following,\r\n            }));\r\n\r\n            setIsFollowing(!isFollowing);\r\n        } catch (err) {\r\n            console.error(err);\r\n        } finally {\r\n            setButtonLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (!user) return <p>User not found</p>;\r\n\r\n    return (\r\n        <div className=\"max-w-4xl mx-auto p-6\">\r\n            {/* Profile Header */}\r\n            <div className=\"flex flex-col md:flex-row items-center md:items-start gap-6 border-b pb-6 mb-6\">\r\n                <img\r\n                    src={user.avatar || \"/default-avatar.png\"}\r\n                    alt={user.name}\r\n                    className=\"w-28 h-28 md:w-32 md:h-32 rounded-full border-2 border-gray-300\"\r\n                />\r\n\r\n                <div className=\"flex-1\">\r\n                    <div className=\"flex items-center gap-4 mb-3\">\r\n                        <h1 className=\"text-2xl font-bold\">{user.name}</h1>\r\n                        {user._id !== currentUserId && (\r\n                            <button\r\n                                onClick={handleFollowToggle}\r\n                                disabled={buttonLoading}\r\n                                className={`px-4 py-1 rounded-lg shadow text-white text-sm transition ${isFollowing\r\n                                        ? \"bg-gray-400 hover:bg-gray-500\"\r\n                                        : \"bg-blue-500 hover:bg-blue-600\"\r\n                                    }`}\r\n                            >\r\n                                {buttonLoading ? \"...\" : isFollowing ? \"Unfollow\" : \"Follow\"}\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"flex gap-6 text-gray-700 mb-2\">\r\n                        <span><b>{posts.length}</b> posts</span>\r\n                        <span><b>{user.followers?.length || 0}</b> followers</span>\r\n                        <span><b>{user.following?.length || 0}</b> following</span>\r\n                    </div>\r\n\r\n                    {user.bio && <p className=\"text-gray-600 text-sm\">{user.bio}</p>}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Posts Grid */}\r\n            <div className=\"grid grid-cols-3 gap-2\">\r\n                {posts.map((post) => (\r\n                    <div\r\n                        key={post._id}\r\n                        className=\"relative aspect-square bg-gray-100 overflow-hidden rounded\"\r\n                    >\r\n                        {post.image ? (\r\n                            <img\r\n                                src={`http://localhost:5000${post.image}`}\r\n                                alt=\"post\"\r\n                                className=\"object-cover w-full h-full hover:scale-105 transition-transform\"\r\n                            />\r\n                        ) : (\r\n                            <p className=\"text-sm p-2\">{post.content}</p>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,+CAA+C;AAC/C,gCAAgC;AAEhC,0CAA0C;AAC1C,8CAA8C;AAC9C,8CAA8C;AAE9C,wBAAwB;AACxB,0CAA0C;AAC1C,2FAA2F;AAC3F,6CAA6C;AAE7C,oBAAoB;AACpB,8EAA8E;AAE9E,0CAA0C;AAC1C,iDAAiD;AAEjD,+DAA+D;AAC/D,8BAA8B;AAC9B,iEAAiE;AACjE,gBAAgB;AAChB,YAAY;AACZ,0BAA0B;AAC1B,cAAc;AAEd,2CAA2C;AAE3C,eAAe;AACf,kDAAkD;AAClD,gCAAgC;AAChC,2EAA2E;AAC3E,uBAAuB;AACvB,iEAAiE;AACjE,sCAAsC;AACtC,gEAAgE;AAChE,qBAAqB;AACrB,wBAAwB;AACxB,0EAA0E;AAC1E,oEAAoE;AACpE,4EAA4E;AAC5E,yBAAyB;AACzB,qBAAqB;AAErB,mDAAmD;AACnD,uDAAuD;AACvD,yCAAyC;AACzC,0FAA0F;AAC1F,0CAA0C;AAC1C,mCAAmC;AACnC,+GAA+G;AAC/G,6CAA6C;AAC7C,yEAAyE;AACzE,iCAAiC;AAEjC,gCAAgC;AAChC,4EAA4E;AAC5E,6BAA6B;AAC7B,6BAA6B;AAC7B,sBAAsB;AACtB,qBAAqB;AACrB,iBAAiB;AACjB,SAAS;AACT,IAAI;;;;;AAkBJ;AACA;;;AAHA;;;AAKe,SAAS,YAAY,KAAiB;QAAjB,EAAE,aAAa,EAAE,GAAjB;QA+FF,iBACA;;IA/F9B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACrC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACN,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,iBAAiB;QACrB;gCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACN,IAAI,CAAC,iBAAiB,CAAC,eAAe;YAEtC,MAAM;sDAAe;oBACjB,IAAI;4BAQI;wBAPJ,MAAM,YAAY,iBAAiB;wBACnC,MAAM,MAAM,MAAM,iHAAA,CAAA,UAAG,CAAC,IAAI,CAAC,gBAAgB;4BAAE,IAAI;wBAAU;wBAE3D,QAAQ,IAAI,IAAI,CAAC,IAAI;wBACrB,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK;wBAE5B,gBACI,2BAAA,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,cAAvB,+CAAA,yBAAyB,QAAQ,CAAC;oBAE1C,EAAE,OAAO,KAAK;wBACV,QAAQ,KAAK,CAAC,2BAA2B;oBAC7C,SAAU;wBACN,WAAW;oBACf;gBACJ;;YAEA;QACJ;gCAAG;QAAC;QAAe;KAAc;IAEjC,MAAM,qBAAqB;QACvB,IAAI,CAAC,QAAQ,CAAC,eAAe;QAC7B,iBAAiB;QAEjB,IAAI;YACA,MAAM,SAAS,cAAc,aAAa;YAC1C,MAAM,MAAM,MAAM,iHAAA,CAAA,UAAG,CAAC,IAAI,CAAC,WAAW;gBAClC,QAAQ;gBACR,cAAc,KAAK,GAAG;gBACtB;YACJ;YAEA,QAAQ,CAAC,OAAS,CAAC;oBACf,GAAG,IAAI;oBACP,WAAW,IAAI,IAAI,CAAC,SAAS;oBAC7B,WAAW,IAAI,IAAI,CAAC,SAAS;gBACjC,CAAC;YAED,eAAe,CAAC;QACpB,EAAE,OAAO,KAAK;YACV,QAAQ,KAAK,CAAC;QAClB,SAAU;YACN,iBAAiB;QACrB;IACJ;IAEA,IAAI,SAAS,qBAAO,6LAAC;kBAAE;;;;;;IACvB,IAAI,CAAC,MAAM,qBAAO,6LAAC;kBAAE;;;;;;IAErB,qBACI,6LAAC;QAAI,WAAU;;0BAEX,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBACG,KAAK,KAAK,MAAM,IAAI;wBACpB,KAAK,KAAK,IAAI;wBACd,WAAU;;;;;;kCAGd,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAI,WAAU;;kDACX,6LAAC;wCAAG,WAAU;kDAAsB,KAAK,IAAI;;;;;;oCAC5C,KAAK,GAAG,KAAK,+BACV,6LAAC;wCACG,SAAS;wCACT,UAAU;wCACV,WAAW,AAAC,6DAGP,OAHmE,cAC9D,kCACA;kDAGT,gBAAgB,QAAQ,cAAc,aAAa;;;;;;;;;;;;0CAKhE,6LAAC;gCAAI,WAAU;;kDACX,6LAAC;;0DAAK,6LAAC;0DAAG,MAAM,MAAM;;;;;;4CAAK;;;;;;;kDAC3B,6LAAC;;0DAAK,6LAAC;0DAAG,EAAA,kBAAA,KAAK,SAAS,cAAd,sCAAA,gBAAgB,MAAM,KAAI;;;;;;4CAAM;;;;;;;kDAC1C,6LAAC;;0DAAK,6LAAC;0DAAG,EAAA,kBAAA,KAAK,SAAS,cAAd,sCAAA,gBAAgB,MAAM,KAAI;;;;;;4CAAM;;;;;;;;;;;;;4BAG7C,KAAK,GAAG,kBAAI,6LAAC;gCAAE,WAAU;0CAAyB,KAAK,GAAG;;;;;;;;;;;;;;;;;;0BAKnE,6LAAC;gBAAI,WAAU;0BACV,MAAM,GAAG,CAAC,CAAC,qBACR,6LAAC;wBAEG,WAAU;kCAET,KAAK,KAAK,iBACP,6LAAC;4BACG,KAAK,AAAC,wBAAkC,OAAX,KAAK,KAAK;4BACvC,KAAI;4BACJ,WAAU;;;;;iDAGd,6LAAC;4BAAE,WAAU;sCAAe,KAAK,OAAO;;;;;;uBAVvC,KAAK,GAAG;;;;;;;;;;;;;;;;AAiBrC;GA5HwB;KAAA","debugId":null}}]
}