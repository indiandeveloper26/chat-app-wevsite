{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/live-app/socail-app/socail-forntend/socail-appwith-web/socail-web-app/app/postshow/postuserdata.jsx"],"sourcesContent":["\r\n\r\n\r\n\r\n// \"use client\"\r\n\r\n// import React, { useEffect, useState } from \"react\"\r\n// import axios from \"axios\"\r\n\r\n// export default function Postuserdata({ id }) {\r\n//     const [user, setUser] = useState(null)\r\n//     const [loading, setLoading] = useState(true)\r\n\r\n//     useEffect(() => {\r\n//         if (!id) return\r\n//         const fetchUser = async () => {\r\n//             try {\r\n//                 const res = await axios.post(\"http://localhost:5000/postuserprofile\", { id })\r\n//                 setUser(res.data)  // âœ… sirf user object set karo\r\n//                 console.log('api data', res.data)\r\n//             } catch (err) {\r\n//                 console.error(\"Error fetching user\", err)\r\n//             } finally {\r\n//                 setLoading(false)\r\n//             }\r\n//         }\r\n//         fetchUser()\r\n//     }, [id])\r\n\r\n//     if (loading) return <p>Loading...</p>\r\n//     if (!user) return <p>User not found</p>\r\n\r\n//     return (\r\n//         <div className=\"p-4 max-w-2xl mx-auto\">\r\n//             {/* Profile Header */}\r\n//             <div className=\"flex items-center gap-4 mb-6\">\r\n//                 <img\r\n//                     src={`http://localhost:5000/${user.avatar || \"default-avatar.png\"}`}\r\n//                     alt={user.name}\r\n//                     className=\"w-20 h-20 rounded-full border\"\r\n//                 />\r\n//                 <div>\r\n//                     <h1 className=\"text-2xl font-bold\">{user.name}</h1>\r\n//                     <p className=\"text-gray-600\">{user.bio || \"No bio yet\"}</p>\r\n//                 </div>\r\n//             </div>\r\n\r\n//             {/* Posts */}\r\n//             <h2 className=\"text-lg font-semibold mb-3\">Posts</h2>\r\n//             <div className=\"grid grid-cols-3 gap-2\">\r\n//                 {user.posts?.map((post) => (\r\n//                     <img\r\n//                         key={post._id}\r\n//                         src={`http://localhost:5000/${post.image.replace(/^\\/+/, \"\")}`}\r\n//                         alt=\"post\"\r\n//                         className=\"w-full h-full object-cover\"\r\n//                     />\r\n//                 ))}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// \"use client\"\r\n\r\n// import React, { useEffect, useState } from \"react\"\r\n// import axios from \"axios\"\r\n\r\n// export default function PostUserData({ id, currentUserId }) {\r\n//     const [user, setUser] = useState(null)\r\n//     const [loading, setLoading] = useState(true)\r\n//     const [isFollowing, setIsFollowing] = useState(false)\r\n//     const [buttonLoading, setButtonLoading] = useState(false)\r\n\r\n//     useEffect(() => {\r\n//         if (!id) return\r\n//         const fetchUser = async () => {\r\n//             try {\r\n//                 const res = await axios.post(\"http://localhost:5000/postuserprofile\", { id })\r\n//                 setUser(res.data)\r\n\r\n//                 // check if current user is following\r\n//                 setIsFollowing(res.data.user.followers?.includes(currentUserId))\r\n//             } catch (err) {\r\n//                 console.error(\"Error fetching user\", err)\r\n//             } finally {\r\n//                 setLoading(false)\r\n//             }\r\n//         }\r\n//         fetchUser()\r\n//     }, [id, currentUserId])\r\n\r\n//     const handleFollowToggle = async () => {\r\n//         if (!user) return\r\n//         setButtonLoading(true)\r\n//         try {\r\n//             const action = isFollowing ? \"unfollow\" : \"follow\"\r\n//             const res = await axios.post(\"http://localhost:5000/follw\", {\r\n//                 userId: currentUserId,\r\n//                 targetUserId: user._id\r\n//             })\r\n//             // update followers locally\r\n//             setUser((prev) => ({\r\n//                 ...prev,\r\n//                 followers: res.data.followers\r\n//             }))\r\n//             setIsFollowing(!isFollowing)\r\n//         } catch (err) {\r\n//             console.error(err)\r\n//         } finally {\r\n//             setButtonLoading(false)\r\n//         }\r\n//     }\r\n\r\n//     if (loading) return <p>Loading...</p>\r\n//     if (!user) return <p>User not found</p>\r\n\r\n//     return (\r\n//         <div className=\"p-4 max-w-2xl mx-auto\">\r\n//             {/* Profile Header */}\r\n//             <div className=\"flex items-center gap-6 mb-8\">\r\n//                 <img\r\n//                     src={`http://localhost:5000/${user.avatar || \"default-avatar.png\"}`}\r\n//                     alt={user.name}\r\n//                     className=\"w-24 h-24 rounded-full border-2 border-gray-300\"\r\n//                 />\r\n//                 <div>\r\n//                     <h1 className=\"text-2xl font-bold\">{user.name}</h1>\r\n//                     <p className=\"text-gray-600\">{user.bio || \"No bio yet\"}</p>\r\n//                     <div className=\"flex gap-6 mt-3 text-sm text-gray-700\">\r\n//                         <span><b>{user.posts?.length || 0}</b> Posts</span>\r\n//                         <span><b>{user.followers?.length || 0}</b> Followers</span>\r\n//                         <span><b>{user.following?.length || 0}</b> Following</span>\r\n//                     </div>\r\n//                     <button\r\n//                         onClick={handleFollowToggle}\r\n//                         disabled={buttonLoading}\r\n//                         className={`mt-4 px-4 py-2 rounded-lg shadow text-white transition ${isFollowing\r\n//                             ? \"bg-gray-400 hover:bg-gray-500\"\r\n//                             : \"bg-blue-500 hover:bg-blue-600\"\r\n//                             }`}\r\n//                     >\r\n//                         {buttonLoading ? \"...\" : isFollowing ? \"Unfollow\" : \"Follow\"}\r\n//                     </button>\r\n//                 </div>\r\n//             </div>\r\n\r\n//             {/* Posts Grid */}\r\n//             <h2 className=\"text-lg font-semibold mb-3\">Posts</h2>\r\n//             <div className=\"grid grid-cols-3 gap-2\">\r\n//                 {user.posts?.map((post) => (\r\n//                     <img\r\n//                         key={post._id}\r\n//                         src={`http://localhost:5000/${post.image.replace(/^\\/+/, \"\")}`}\r\n//                         alt=\"post\"\r\n//                         className=\"w-full h-full object-cover hover:scale-105 transition-transform rounded\"\r\n//                     />\r\n//                 ))}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\"use client\"\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nexport default function PostUserData({ id }) {\r\n    const [user, setUser] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const [isFollowing, setIsFollowing] = useState(false)\r\n    const [buttonLoading, setButtonLoading] = useState(false)\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!id) return\r\n\r\n        const fetchUser = async () => {\r\n\r\n            let currentUserId = localStorage.getItem('id')\r\n            try {\r\n                const res = await axios.post(\"http://localhost:5000/postuserprofile\", { id })\r\n\r\n                console.log(res.data)\r\n                const userData = res.data\r\n                setUser(userData)\r\n                setIsFollowing(userData.followers?.includes(currentUserId))\r\n            } catch (err) {\r\n                console.error(\"Error fetching user\", err)\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        }\r\n\r\n        fetchUser()\r\n    }, [id])\r\n\r\n    const handleFollowToggle = async () => {\r\n\r\n        console.log('follwing')\r\n        // alert('follw')\r\n        if (!user) return\r\n        setButtonLoading(true)\r\n\r\n\r\n\r\n\r\n        let currentUserId = localStorage.getItem('id')\r\n\r\n        console.log(id, currentUserId)\r\n        try {\r\n            const action = isFollowing ? \"unfollow\" : \"follow\"\r\n            const res = await axios.post(\"http://localhost:5000/follw\", {\r\n                userId: currentUserId,\r\n                targetUserId: id\r\n            })\r\n            alert('follw')\r\n            console.log('follw')\r\n            console.log(res)\r\n            // update followers locally\r\n            setUser((prev) => ({\r\n                ...prev,\r\n                followers: res.data.followers\r\n            }))\r\n            setIsFollowing(!isFollowing)\r\n        } catch (err) {\r\n            console.error(err)\r\n        } finally {\r\n            setButtonLoading(false)\r\n        }\r\n    }\r\n\r\n    if (loading) return <p>Loading...</p>\r\n    if (!user) return <p>User not found</p>\r\n\r\n    return (\r\n        <div className=\"p-4 max-w-2xl mx-auto\">\r\n            {/* Profile Header */}\r\n            <div className=\"flex items-center gap-6 mb-8\">\r\n                <img\r\n                    src={`http://localhost:5000/${user.avatar || \"default-avatar.png\"}`}\r\n                    alt={user.name}\r\n                    className=\"w-24 h-24 rounded-full border-2 border-gray-300\"\r\n                />\r\n                <div>\r\n                    <h1 className=\"text-2xl font-bold\">{user.name}</h1>\r\n                    <p className=\"text-gray-600\">{user.bio || \"No bio yet\"}</p>\r\n                    <div className=\"flex gap-6 mt-3 text-sm text-gray-700\">\r\n                        <span><b>{user.posts?.length || 0}</b> Posts</span>\r\n                        <span><b>{user.followers?.length || 0}</b> Followers</span>\r\n                        <span><b>{user.following?.length || 0}</b> Following</span>\r\n                    </div>\r\n                    <button\r\n                        onClick={handleFollowToggle}\r\n                        disabled={buttonLoading}\r\n                        className={`mt-4 px-4 py-2 rounded-lg shadow text-white transition ${isFollowing ? \"bg-gray-400 hover:bg-gray-500\" : \"bg-blue-500 hover:bg-blue-600\"\r\n                            }`}\r\n                    >\r\n                        {buttonLoading ? \"...\" : isFollowing ? \"Unfollow\" : \"Follow\"}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Posts Grid */}\r\n            <h2 className=\"text-lg font-semibold mb-3\">Posts</h2>\r\n            <div className=\"grid grid-cols-3 gap-2\">\r\n                {user.posts?.map((post) => (\r\n                    <img\r\n                        key={post._id}\r\n                        src={`http://localhost:5000/${post.image.replace(/^\\/+/, \"\")}`}\r\n                        alt=\"post\"\r\n                        className=\"w-full h-full object-cover hover:scale-105 transition-transform rounded\"\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}