{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/live-app/socail-app/socail-forntend/socail-appwith-web/socail-web-app/app/postshow/page.jsx"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n// \"use client\";\r\n// import { useEffect, useState } from \"react\";\r\n// import api from \"../apicall.js\";\r\n// import { useRouter } from \"next/navigation\";\r\n\r\n\r\n// export default function FeedScreen() {\r\n//     const [posts, setPosts] = useState([]);\r\n//     const [selectedPost, setSelectedPost] = useState(null);\r\n//     const [commentText, setCommentText] = useState(\"\");\r\n\r\n\r\n\r\n//     console.log(posts)\r\n\r\n//     // ‚úÖ Backend se posts fetch\r\n//     const fetchPosts = async () => {\r\n//         try {\r\n//             let res = await api.get(\"/userget\");\r\n//             setPosts(res.data);\r\n//             console.log(\"Posts:\", res.data);\r\n//         } catch (error) {\r\n//             console.log(\"Fetch error\", error.message);\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         fetchPosts();\r\n//     }, []);\r\n\r\n//     // ‚úÖ Like button\r\n//     const handleLike = async (postId) => {\r\n//         try {\r\n//             const userId = localStorage.getItem(\"id\");\r\n//             if (!userId) return;\r\n\r\n//             const res = await api.post(\"/like\", { userId, postId });\r\n//             const updatedLikes = res.data.likes;\r\n\r\n//             setPosts((prev) =>\r\n//                 prev.map((p) =>\r\n//                     p._id === postId ? { ...p, likes: updatedLikes } : p\r\n//                 )\r\n//             );\r\n//         } catch (error) {\r\n//             console.log(\"Like Error:\", error);\r\n//         }\r\n//     };\r\n\r\n//     // ‚úÖ Comment button\r\n//     const handleComment = async (postId) => {\r\n//         if (!commentText.trim()) return;\r\n\r\n//         const userId = localStorage.getItem(\"id\");\r\n//         try {\r\n//             const res = await api.post(\"/cmt\", { userId, postId, text: commentText });\r\n//             const newComment = res.data.comment;\r\n\r\n//             setPosts((prev) =>\r\n//                 prev.map((p) =>\r\n//                     p._id === postId\r\n//                         ? { ...p, comments: [...p.comments, newComment] }\r\n//                         : p\r\n//                 )\r\n//             );\r\n\r\n//             setCommentText(\"\");\r\n//             setSelectedPost(null);\r\n//         } catch (error) {\r\n//             console.log(\"Comment Error:\", error);\r\n//         }\r\n//     };\r\n\r\n//     let route = useRouter()\r\n\r\n//     // ‚úÖ Delete Post\r\n//     const handleDelete = async (postId) => {\r\n\r\n//         console.log(\r\n//             postId\r\n//         )\r\n//         if (!confirm(\"Are you sure you want to delete this post?\")) return;\r\n\r\n//         try {\r\n//             await api.delete(\"/delatepost\", { data: { id: postId } });\r\n//             // UI update\r\n//             setPosts((prev) => prev.filter((p) => p._id !== postId));\r\n//         } catch (error) {\r\n//             ``\r\n//             console.log(\"Delete Error:\", error);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"bg-gray-100 min-h-screen p-4\">\r\n//             {/* New Post Button */}\r\n//             <button\r\n//                 onClick={() => (window.location.href = \"/post\")}\r\n//                 className=\"bg-blue-500 text-white px-4 py-2 rounded-lg mb-4\"\r\n//             >\r\n//                 ‚ûï New Post\r\n//             </button>\r\n\r\n//             {/* Posts */}\r\n//             <div className=\"space-y-4\">\r\n//                 {posts.map((item) => (\r\n//                     <div\r\n//                         key={item._id}\r\n//                         className=\"bg-white p-4 rounded-lg shadow cursor-pointer\"\r\n//                         onClick={() => setSelectedPost(item)} // click se modal open\r\n//                     >\r\n//                         <p onClick={() => route.push(`/postshow/${item.user}`)} className=\"font-bold\">\r\n//                             üë§ {item.username}\r\n//                         </p>\r\n//                         <p className=\"mb-2\">{item.content}</p>\r\n\r\n//                         {item.image && (\r\n//                             <img\r\n//                                 src={`http://localhost:5000${item.image}`}\r\n//                                 alt=\"post\"\r\n//                                 className=\"w-full h-60 object-cover rounded-md mb-2\"\r\n//                             />\r\n//                         )}\r\n\r\n//                         <div className=\"flex justify-between items-center\">\r\n//                             <div className=\"flex gap-2\">\r\n//                                 <button onClick={(e) => { e.stopPropagation(); handleLike(item._id); }}>\r\n//                                     üíñ {item.likes.length}\r\n//                                 </button>\r\n//                                 <button onClick={(e) => { e.stopPropagation(); setSelectedPost(item); }}>\r\n//                                     üí¨ {item.comments.length}\r\n//                                 </button>\r\n//                             </div>\r\n//                             <button\r\n//                                 onClick={(e) => { e.stopPropagation(); handleDelete(item._id); }}\r\n//                                 className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n//                             >\r\n//                                 üóëÔ∏è Delete\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                 ))}\r\n\r\n//                 {/* Full Post Modal */}\r\n//                 {selectedPost && (\r\n//                     <div className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50\">\r\n//                         <div className=\"bg-white rounded-lg w-full max-w-2xl max-h-[90vh] overflow-auto p-4 relative\">\r\n//                             <button\r\n//                                 onClick={() => setSelectedPost(null)}\r\n//                                 className=\"absolute top-2 right-2 text-red-500 font-bold text-xl\"\r\n//                             >\r\n//                                 ‚úñ\r\n//                             </button>\r\n\r\n//                             <p className=\"font-bold text-lg mb-2\">üë§ {selectedPost.username}</p>\r\n//                             <p className=\"mb-2\">{selectedPost.content}</p>\r\n\r\n//                             {selectedPost.image && (\r\n//                                 <img\r\n//                                     src={`http://localhost:5000${selectedPost.image}`}\r\n//                                     alt=\"post\"\r\n//                                     className=\"w-full max-h-96 object-cover rounded-md mb-2\"\r\n//                                 />\r\n//                             )}\r\n\r\n//                             <div className=\"flex justify-between items-center mb-3\">\r\n//                                 <button onClick={() => handleLike(selectedPost._id)}>\r\n//                                     üíñ {selectedPost.likes.length}\r\n//                                 </button>\r\n//                                 <button onClick={() => { }}>\r\n//                                     üí¨ {selectedPost.comments.length}\r\n//                                 </button>\r\n//                                 <button\r\n//                                     onClick={() => handleDelete(selectedPost._id)}\r\n//                                     className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n//                                 >\r\n//                                     üóëÔ∏è Delete\r\n//                                 </button>\r\n//                             </div>\r\n\r\n//                             <div className=\"mb-3\">\r\n//                                 {selectedPost.comments.map((c, i) => (\r\n//                                     <p key={i} className=\"mb-1\">‚Ä¢ {c.text}</p>\r\n//                                 ))}\r\n//                             </div>\r\n\r\n//                             <input\r\n//                                 value={commentText}\r\n//                                 onChange={(e) => setCommentText(e.target.value)}\r\n//                                 placeholder=\"Write a comment...\"\r\n//                                 className=\"border p-2 w-full mb-3 rounded\"\r\n//                             />\r\n//                             <button\r\n//                                 onClick={() => handleComment(selectedPost._id)}\r\n//                                 className=\"bg-green-500 text-white px-3 py-1 rounded w-full\"\r\n//                             >\r\n//                                 Post Comment\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                 )}\r\n\r\n//             </div>\r\n\r\n//             {/* Comment Modal */}\r\n//             {selectedPost && (\r\n//                 <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n//                     <div className=\"bg-white p-6 rounded-lg w-96\">\r\n//                         <h2 className=\"text-lg font-bold mb-3\">Comments</h2>\r\n\r\n//                         {selectedPost.comments.map((c, i) => (\r\n//                             <p key={i} className=\"mb-1\">‚Ä¢ {c.text}</p>\r\n//                         ))}\r\n\r\n//                         <input\r\n//                             value={commentText}\r\n//                             onChange={(e) => setCommentText(e.target.value)}\r\n//                             placeholder=\"Write a comment...\"\r\n//                             className=\"border p-2 w-full mb-3 rounded\"\r\n//                         />\r\n//                         <div className=\"flex gap-2\">\r\n//                             <button\r\n//                                 onClick={() => handleComment(selectedPost._id)}\r\n//                                 className=\"bg-green-500 text-white px-3 py-1 rounded\"\r\n//                             >\r\n//                                 Post Comment\r\n//                             </button>\r\n//                             <button\r\n//                                 onClick={() => setSelectedPost(null)}\r\n//                                 className=\"bg-red-500 text-white px-3 py-1 rounded\"\r\n//                             >\r\n//                                 Close\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\"use client\"\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nexport default function PostUserData({ id, currentUserId }) {\r\n    const [user, setUser] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const [isFollowing, setIsFollowing] = useState(false)\r\n    const [buttonLoading, setButtonLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!id) return\r\n\r\n        const fetchUser = async () => {\r\n            try {\r\n                const res = await axios.post(\"http://localhost:5000/postuserprofile\", { id })\r\n                const userData = res.data\r\n                setUser(userData)\r\n                setIsFollowing(userData.followers?.includes(currentUserId))\r\n            } catch (err) {\r\n                console.error(\"Error fetching user\", err)\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        }\r\n\r\n        fetchUser()\r\n    }, [id, currentUserId])\r\n\r\n    const handleFollowToggle = async () => {\r\n        alert('follw')\r\n        if (!user) return\r\n        setButtonLoading(true)\r\n        try {\r\n            const action = isFollowing ? \"unfollow\" : \"follow\"\r\n            const res = await axios.post(\"http://localhost:5000/follw\")\r\n            alert('follw')\r\n            console.log('follw')\r\n            console.log(res)\r\n            // update followers locally\r\n            setUser((prev) => ({\r\n                ...prev,\r\n                followers: res.data.followers\r\n            }))\r\n            setIsFollowing(!isFollowing)\r\n        } catch (err) {\r\n            console.error(err)\r\n        } finally {\r\n            setButtonLoading(false)\r\n        }\r\n    }\r\n\r\n    if (loading) return <p>Loading...</p>\r\n    if (!user) return <p>User not found</p>\r\n\r\n    return (\r\n        <div className=\"p-4 max-w-2xl mx-auto\">\r\n            {/* Profile Header */}\r\n            <div className=\"flex items-center gap-6 mb-8\">\r\n                <img\r\n                    src={`http://localhost:5000/${user.avatar || \"default-avatar.png\"}`}\r\n                    alt={user.name}\r\n                    className=\"w-24 h-24 rounded-full border-2 border-gray-300\"\r\n                />\r\n                <div>\r\n                    <h1 className=\"text-2xl font-bold\">{user.name}</h1>\r\n                    <p className=\"text-gray-600\">{user.bio || \"No bio yet\"}</p>\r\n                    <div className=\"flex gap-6 mt-3 text-sm text-gray-700\">\r\n                        <span><b>{user.posts?.length || 0}</b> Posts</span>\r\n                        <span><b>{user.followers?.length || 0}</b> Followers</span>\r\n                        <span><b>{user.following?.length || 0}</b> Following</span>\r\n                    </div>\r\n                    <button\r\n                        onClick={handleFollowToggle}\r\n                        disabled={buttonLoading}\r\n                        className={`mt-4 px-4 py-2 rounded-lg shadow text-white transition ${isFollowing ? \"bg-gray-400 hover:bg-gray-500\" : \"bg-blue-500 hover:bg-blue-600\"\r\n                            }`}\r\n                    >\r\n                        {buttonLoading ? \"...\" : isFollowing ? \"Unfollow\" : \"Follow\"}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Posts Grid */}\r\n            <h2 className=\"text-lg font-semibold mb-3\">Posts</h2>\r\n            <div className=\"grid grid-cols-3 gap-2\">\r\n                {user.posts?.map((post) => (\r\n                    <img\r\n                        key={post._id}\r\n                        src={`http://localhost:5000/${post.image.replace(/^\\/+/, \"\")}`}\r\n                        alt=\"post\"\r\n                        className=\"w-full h-full object-cover hover:scale-105 transition-transform rounded\"\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}